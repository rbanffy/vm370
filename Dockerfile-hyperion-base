FROM debian:testing-slim

LABEL maintainer="Ricardo BÃ¡nffy <rbanffy@gmail.com>"

ARG USERNAME=hercules
ARG USER_UID=1000
ARG USER_GID=$USER_UID
ARG TARGETPLATFORM
ARG TARGETARCH

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    DEBIAN_FRONTEND=noninteractive \
    groupadd --gid $USER_GID $USERNAME && \
    useradd --uid $USER_UID --gid $USER_GID -m $USERNAME && \
    apt update && \
    # apt upgrade -y && \
    apt -y install --no-install-recommends \
    apt-utils \
    autoconf \
    automake \
    build-essential \
    ca-certificates \
    cmake \
    flex \
    gawk \
    git \
    libbz2-dev \
    libcap2-bin \
    libltdl-dev \
    libregina3-dev \
    libtool-bin \
    m4 \
    sysvbanner \
    time \
    unzip \
    wget \
    zlib1g-dev

RUN cd /home/$USERNAME/ && \

    # Get the main repo
    git clone https://github.com/SDL-Hercules-390/hyperion.git && \

    # Remove Hyperion's distribution bundled amd64 binaries
    rm -v /home/$USERNAME/hyperion/crypto/lib/* && \
    rm -v /home/$USERNAME/hyperion/decNumber/lib/* && \
    rm -v /home/$USERNAME/hyperion/SoftFloat/lib/* && \
    rm -v /home/$USERNAME/hyperion/telnet/lib/* && \

    # Get the external modules
    git clone https://github.com/SDL-Hercules-390/crypto.git && \
    git clone https://github.com/SDL-Hercules-390/decNumber.git && \
    git clone https://github.com/SDL-Hercules-390/SoftFloat.git && \
    git clone https://github.com/SDL-Hercules-390/telnet.git

    # Figure out the library destination
RUN echo "TARGETARCH is ${TARGETARCH}"; \
    if [ "${TARGETARCH}" = "ppc64le" ]; then \
        export DEST="ppc"; \
        export WORD_LENGTH="64";\
    elif [ "${TARGETARCH}" = "arm64" ]; then \
        export DEST="aarch64"; \
        export WORD_LENGTH="64"; \
    elif [ "${TARGETPLATFORM}" = "linux/arm/v7" ]; then \
        export DEST="armv7l"; \
        export WORD_LENGTH="32"; \
    elif [ "${TARGETPLATFORM}" = "linux/arm/v6" ]; then \
        export DEST="armv6l"; \
        export WORD_LENGTH="32"; \
    elif [ "${TARGETARCH}" = "amd64" ]; then \
        export DEST=""; \
        export WORD_LENGTH="64"; \
    else \
        export DEST="${TARGETARCH}"; \
        export WORD_LENGTH="64"; \
    fi && \
    echo "${TARGETARCH} mapped to \"$DEST\""; \

    # Build the external crypto module
    if [ "$WORD_LENGTH" = "32" ]; then \
        mkdir -v /home/$USERNAME/crypto32.Release && \
        cd /home/$USERNAME/crypto32.Release && \
        cmake ../crypto && \
        make; \
    else \
        mkdir -v /home/$USERNAME/crypto64.Release && \
        cd /home/$USERNAME/crypto64.Release && \
        cmake ../crypto && \
        make; \
    fi && \
    mkdir -pv /home/$USERNAME/hyperion/crypto/lib/${DEST} && \
    cp -v libcrypto*.a /home/$USERNAME/hyperion/crypto/lib/${DEST} && \

    # Build the external decNumber module
    if [ "$WORD_LENGTH" = "32" ]; then \
        mkdir -v /home/$USERNAME/decNumber32.Release && \
        cd /home/$USERNAME/decNumber32.Release && \
        cmake ../decNumber && \
        make; \
    else \
        mkdir -v /home/$USERNAME/decNumber64.Release && \
        cd /home/$USERNAME/decNumber64.Release && \
        cmake ../decNumber && \
        make; \
    fi && \
    mkdir -pv /home/$USERNAME/hyperion/decNumber/lib/${DEST} && \
    cp -v libdecNumber*.a /home/$USERNAME/hyperion/decNumber/lib/${DEST} && \

    # Build the external SoftFloat module
    if [ "$WORD_LENGTH" = "32" ]; then \
        mkdir -v /home/$USERNAME/SoftFloat32.Release && \
        cd /home/$USERNAME/SoftFloat32.Release && \
        cmake ../SoftFloat && \
        make; \
    else \
        mkdir -v /home/$USERNAME/SoftFloat64.Release && \
        cd /home/$USERNAME/SoftFloat64.Release && \
        cmake ../SoftFloat && \
        make; \
    fi && \
    mkdir -pv /home/$USERNAME/hyperion/SoftFloat/lib/${DEST} && \
    cp -v libSoftFloat*.a /home/$USERNAME/hyperion/SoftFloat/lib/${DEST} && \

        # Build the external telnet module
    if [ "$WORD_LENGTH" = "32" ]; then \
        mkdir -v /home/$USERNAME/telnet32.Release && \
        cd /home/$USERNAME/telnet32.Release && \
        cmake ../telnet && \
        make; \
    else \
        mkdir -v /home/$USERNAME/telnet64.Release && \
        cd /home/$USERNAME/telnet64.Release && \
        cmake ../telnet && \
        make; \
    fi && \
    mkdir -pv /home/$USERNAME/hyperion/telnet/lib/${DEST} && \
    cp -v libtelnet*.a /home/$USERNAME/hyperion/telnet/lib/${DEST}

# Build Hercules
RUN cd /home/$USERNAME/hyperion && \
    # ./configure && \
    # make && \
    # make install && \
    # Remove unwanted files.
    # apt purge -y \
    # apt-utils \
    # autoconf \
    # automake \
    # build-essential \
    # ca-certificates \
    # cmake \
    # flex \
    # gawk \
    # git \
    # libbz2-dev \
    # libcap2-bin \
    # libltdl-dev \
    # libregina3-dev \
    # libtool-bin \
    # m4 \
    # sysvbanner \
    # time \
    # unzip \
    # wget \
    # zlib1g-dev && \
    # apt -y autoremove && \
    # rm -rfv /var/lib/apt/lists/* *.zip hyperion *.Release SoftFloat64 decNumber telnet crypto && \
    chown -R $USERNAME:$USERNAME /home/$USERNAME

USER $USERNAME
WORKDIR /home/$USERNAME

EXPOSE 3270/TCP
EXPOSE 8038/TCP

CMD ["hercules"]
